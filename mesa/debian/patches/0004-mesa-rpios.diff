diff --git a/src/gallium/drivers/v3d/v3d_screen.c b/src/gallium/drivers/v3d/v3d_screen.c
index 1864b95be0e..1e9d996d88e 100644
--- a/src/gallium/drivers/v3d/v3d_screen.c
+++ b/src/gallium/drivers/v3d/v3d_screen.c
@@ -47,6 +47,42 @@
 #include "compiler/v3d_compiler.h"
 #include "drm-uapi/drm_fourcc.h"
 
+#ifdef HAVE_WAYLAND_PLATFORM
+#include <wayland-client.h>
+#endif
+
+#ifdef HAVE_X11_PLATFORM
+#include <xcb/xcb.h>
+#endif
+
+static bool
+check_x_session()
+{
+        bool xcb_connection = false;
+
+#ifdef HAVE_WAYLAND_PLATFORM
+        struct wl_display *display;
+
+        display = wl_display_connect(NULL);
+
+        if (display) {
+                wl_display_disconnect(display);
+                return xcb_connection;
+        }
+#endif
+
+#ifdef HAVE_X11_PLATFORM
+        xcb_connection_t *conn;
+
+        conn = xcb_connect(NULL, NULL);
+
+        if (!xcb_connection_has_error(conn))
+                xcb_connection = true;
+        xcb_disconnect(conn);
+#endif
+        return xcb_connection;
+}
+
 static const char *
 v3d_screen_get_name(struct pipe_screen *pscreen)
 {
@@ -856,6 +892,28 @@ v3d_screen_create(int fd, const struct pipe_screen_config *config,
                 v3d_has_feature(screen, DRM_V3D_PARAM_SUPPORTS_CACHE_FLUSH);
         screen->has_perfmon = v3d_has_feature(screen, DRM_V3D_PARAM_SUPPORTS_PERFMON);
 
+        screen->has_x_session = check_x_session();
+        
+        screen->ignore_scanout_usages = getenv("V3D_IGNORE_SCANOUT_USAGES");
+
+        const char *ignore_scanout_usages_with_modifiers_name =
+                "v3d_ignore_scanout_usages_with_modifiers";
+        screen->ignore_scanout_usages_with_modifiers =
+                driCheckOption(config->options,
+                               ignore_scanout_usages_with_modifiers_name,
+                               DRI_BOOL) &&
+                driQueryOptionb(config->options,
+                               ignore_scanout_usages_with_modifiers_name);
+
+        const char *maintain_ignorable_scanout_name =
+                "v3d_maintain_ignorable_scanout";
+        screen->maintain_ignorable_scanout =
+                driCheckOption(config->options,
+                               maintain_ignorable_scanout_name,
+                               DRI_BOOL) &&
+                driQueryOptionb(config->options,
+                               maintain_ignorable_scanout_name);
+
         v3d_fence_init(screen);
 
         v3d_process_debug_variable();
